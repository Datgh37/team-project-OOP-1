<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAGBgAAAEAIACICQAAFgAAACgAAAAYAAAAMAAAAAEAIAAAAAAAAAkAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAlJSUAI+PjwCXl5cQmJiYMZiYmEeZmZlIj4+PM3p6ehJ1dXUAeXl5AAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJSUlACbm5sAl5eXGpiY
        mHWZmZnHmZmZ7ZeXl/mOjo75gICA73p6esp6enp4enp6HHl5eQB6enoAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAlJSUAKmpqQCYmJhAmZmZyZmZmf6Xl5f/j4+P/4KCgv97e3v/enp6/3p6
        ev96enr+enp6zXp6ekVpaWkAeHh4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACUlJQAmZmZAJiY
        mD2ZmZnemZmZ+ZaWlsOHh4eve3t7sHl5ebF5eXmyeXl5snl5ebF6enrCenp6+Hp6euN6enpFenp6AHh4
        eAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACXl5cAl5eXGJmZmcSZmZn/mJiYoZGRkQ5WVlYDcHBwBHV1
        dQV0dHQFdHR0BXR0dAR4eHgMenp6mHp6ev96enrMeXl5Hnp6egAAAAAAAAAAAAAAAAAAAAAAAAAAAJOT
        kwCbm5sAmJiYcJmZmf6ZmZn/mJiYeZqamgCSkpIAAAAAAAAAAAAAAAAAAAAAAHp6egB6enoAeXl5bHp6
        ev96enr/enp6enx8fAB4eHgAAAAAAAAAAAAAAAAAAAAAAJaWlgCWlpYOmZmZwpmZmf+ZmZn/mZmZt5eX
        lw2Xl5cAAAAAAAAAAAAAAAAAAAAAAHl5eQB5eXkKenp6rnp6ev96enr/enp6ynl5eRJ5eXkAAAAAAAAA
        AAAAAAAAAAAAAJeXlwCXl5cqmZmZ6ZmZmf+ZmZn/mZmZ+ZiYmIOXl5cPmpqaAJCQkAB2dnYAenp6AHl5
        eQ16enp7enp693p6ev96enr/enp67Xl5eTF5eXkAAAAAAAAAAAAAAAAAAAAAAJiYmACYmJg9mZmZ9ZmZ
        mf+ZmZn/mZmZ/5mZmfqZmZm/mJiYepWVlVeAgIBWeXl5eXp6erx6enr4enp6/3p6ev96enr/enp6+Hl5
        eUV5eXkAAAAAAAAAAAAAAAAAAAAAAJiYmACYmJg9mZmZ9JmZmf+ZmZn/mZmZ/5mZmf+ZmZn+mZmZupOT
        k1l9fX1Xenp6tXp6ev16enr/enp6/3p6ev96enr/enp693l5eUV5eXkAAAAAAAAAAAAAAAAAAAAAAJiY
        mACYmJgpmZmZ6JmZmf+ZmZn/mZmZ/5mZmf+ZmZnLmJiYHJiYmAB5eXkAeXl5F3p6esN6enr/enp6/3p6
        ev98fHz/hYWF7ImJiTCIiIgAAAAAAAAAAAAAAAAAAAAAAJeXlwCXl5cNmZmZwZmZmf+ZmZn/mZmZ/5mZ
        mf+YmJiSn5+fAJWVlQB9fX0Aenp6AHp6eoZ6enr/fHx8/4WFhf+SkpL/mJiYyZmZmRGYmJgAAAAAAAAA
        AAAAAAAAAAAAAJOTkwCbm5sAmJiYb5mZmf6ZmZn/mZmZ/5mZmf+YmJiolZWVBZaWlgB3d3cAbW1tA3x8
        fJ6EhIT/kZGR/5iYmP+ZmZn/mJiYepycnACVlZUAAAAAAAAAAAAAAAAAAAAAAAAAAACXl5cAl5eXF5mZ
        mcGZmZn/mZmZ/5mZmf+ZmZnvmJiYZJaWlg+YmJgOk5OTXpKSkuyYmJj/mZmZ/5mZmf+ZmZnKl5eXHZeX
        lwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACUlJQAmZmZAJeXlziZmZnYmZmZ/5mZmf+ZmZn/mZmZ9ZmZ
        mcuZmZnJmZmZ85mZmf+ZmZn/mZmZ/5mZmd6YmJhAmZmZAJSUlAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAlZWVAJ6engCYmJg4mZmZwZmZmf2ZmZn/mZmZ/5mZmf+ZmZn/mZmZ/5mZmf+ZmZn9mZmZx5iY
        mD6tra0AlZWVAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJWVlQCZmZkAl5eXFpmZ
        mW6ZmZnBmZmZ6ZmZmfaZmZn2mZmZ6pmZmcSYmJhzl5eXGZqamgCTk5MAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAlpaWAI2NjQCYmJgNmJiYK5iYmECYmJhAmJiYLJeX
        lw6RkZEAlZWVAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD///8A////AP///wD/gf8A/gB/APwAPwD4AB8A8AAPAPD/
        DwDgfgcA4DwHAOAABwDgAAcA4BgHAOA8BwDwGA8A8AAPAPgAHwD8AD8A/gB/AP+B/wD///8A////AP//
        /wA=
</value>
  </data>
</root>