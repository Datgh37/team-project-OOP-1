<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAGBgAAAEAIACICQAAFgAAACgAAAAYAAAAMAAAAAEAIAAAAAAAAAkAAMMOAADDDgAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABjzmsAYs5qAGLKZQBix2MAY8VgAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAYdBuAGHUcABh0m4AYdVyAGLOagBjw14AY8NeAGPDXgBjw18Ab9D+AGPG/QBz0v8AdNP/AHTU
        /wB01P8AdNP/AHPS/wBqzP4AcND/AFbD/QAAAAAAAAAAAAAAAABh028AYdZzAGHUcQBh1nMAYdVyJ2LN
        aXFjw14zY8NeAGPDXgBx0fQActL/AHfV/wBz0v8PddT/M3XU/0t11P9MddT/NXPS/xF31v8ActL/AHPS
        /wAAAAAAYdJuAGHUcQBh1HEAYdVyAGHUcRNh1XJwYdVy22LNav9jw17kY8NegWPDXhxlxXQAddX/BHXU
        /1100//FcND/727O/vpuzv76cND+8HTT/8h11P9ictL/BnPT/wBh1HEAYdRwAGHVcgBh1HAHYdVyT2HV
        csJh1XL9YdVy/2LOav9jw17/Y8Ne/2PDXtBiw1lectLtaGrM/vVdwfz/XsL9/2HE/f9ixf3/XsL9/13B
        /P9py/74dNP/YXTT/wBh1HEAYdJuAWHVcTNh1XKkYdVy9WXWdf9n13j/YNZy/2DUbv9ixmD/Y8Ne/2PD
        Xv9kw175YMPG8Va8/v9rzP7/dNP//3PS//9nyf3/asv+/2zN/v9XvPz/XcH8pMv//wFg338AYdVyZ2HV
        cudh1XL/YtVz/5/lqf+07b3/YuF6/1rmd/9c33L/YM9n/2PEX/9jw17/ULW+/2XH//921f//YcX9/1m+
        /P9Tufv/WL38/3XU//9nyf3/RK36plm//AJizmoBYdVyo2HVcv9h1XL/YNdz/4bnmP+V7Kb/YN53/13f
        df9e3nX/Xd91/13bb/9hzGL/VLid/1u/+v900///YMP9/1zA/P9tzv7/cdH//3TT//9cwPz9Pqn5bUWu
        +gBg4IAAYdVym2HWcv9e3HT/XOJ2/13edf9h1nL/YdBs/2HRbv9h1XL/YdZy/1/bdP9d4HT/XNZy/1O+
        qP9ZveP/Zcf5/2nL/v9rzP7/Zsj5/1e9+N9CrP5zN6P7Czyn+wBa6HoAX9pzhVzhdv9a53j/XeB2/2HV
        cv9h0m7/Y8di/2LJZf9h1HH/YdNw/2HRbv9h02//Xtxz/1zfc/9az3r/Wb+M/1m7mv9YvJv/WryK/12+
        dMViw1w7htwAAW3KMwBZ6nkAW+R2F1rneHta53jhXOF2/2HWcv9h1XL/YdNw/2HTcP9izGj/Y8Zh/2LH
        Yf9hymT/Yslk/2DUbv9d33T/Xd1v/2HPY/9jxFz/ZMNb/2PDXf9jw17XY8NeHWPDXgBZ6nkAW+R2AFns
        fABa5nctWuZ3m1zidvFf2nT/YdZz/2LRbf9jw1//Ycxl/1/Uav9e1mz/YsZg/2LIZP9h1XL/X9p0/13g
        df9d2m//Ycpj/2PDXv9jw17pY8NeKGPDXgBe3HAAW+R2AFvjdQBa5ncAWuV2BFrneEZb5Xe4XeB2+2DX
        cf9iyWT/Yctk/2HMZf9ixWD/Y8Vg/2LOav9h1XL/YdVy/2HWcv9e3HX/W+J1/17WbP9iyGLvY8NeLWPE
        XwAAAAAAAAAAAFzecQBa5XcAW+V2AFrneABa53cOWud4ZFvkd9Je3XT/YdJt/2LOav9iz2v/YdJv/2HR
        bv9iyWT/Ys1p/2HUcv9g2HP/W+V4/1rnePtc33KvYM5mGGDQZwAAAAAAAAAAAAAAAAAAAAAAW+J0AFrn
        eABa5ncAWuh5AFrndx5a53iDXON35l7cdf9h1nP/YdVy/2HSb/9iy2j/Ys9r/2DXcv9d3nX/WuZ30Vrn
        eGJZ63sNYc1lAGiuTwAAAAAAAAAAAAAAAAAAAAAAAAAAADFyOgBb5HYAZcNeAFrmdwBY+YsAWud4M1rm
        d6Nc4Xb0X9p0/1/adP9f2nT/Xtx0/1zjd+Za53iDWuZ3HVroeQBa5ncAWud4AFvidAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAWuZ3AFvldgBb5HYAWud4AFrmdwZa53hOWuZ3wFrmeP1a5nj1WuZ4pFrn
        eDRY+osAWuZ3AG6PMQBb5HYAXNxwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AABc4HIAWuZ3AFrldwBa53gAWuZ3ElrmeGRa5nhQWuZ3B1rneABb5HYAWuV2AFvgcgAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFvjdQBa6HkAWuZ3AFrn
        eABa53gAWuV3AFrmdwBb4HMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABe1WsAW+F0AFvhdABb4XQAW+F0AAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD///8A////APwf/wDwAAAA4AAAAIAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAA8AAAAPgAAAD+AAEA/4AHAP/gHwD/8H8A////AP//
        /wA=
</value>
  </data>
</root>